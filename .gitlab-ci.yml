image: registry.gitlab.com/jorgehoyos/certifications:latest

stages:
  - build-image
  - deploy-sam
  - call-api
  - synthesis-file

variables:
  DOCKERFILES_DIR: docker
  DEPLOY_PATH: deploy
  STACK_NAME: certifications-audios
  CERTIFICATIONS_PATHS: aws

.docker:
  build-and-push:
    - echo -e "\e[0Ksection_start:`date +%s`:docker[collapsed=true]\r\e[0K${TXT_CYAN_BOLD}Tag and push image"
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $IMAGE_TAG $DOCKERFILES_DIR/
    - docker push $IMAGE_TAG
    - echo -e "\e[0Ksection_end:`date +%s`:docker\r\e[0K"

.sam:
  build:
    - echo -e "\e[0Ksection_start:`date +%s`:sam-build[collapsed=false]\r\e[0K${TXT_CYAN_BOLD}Sam Build"
    - sam build
    - echo -e "\e[0Ksection_end:`date +%s`:sam-build\r\e[0K"
  deploy:
    - echo -e "\e[0Ksection_start:`date +%s`:sam-deploy[collapsed=false]\r\e[0K${TXT_CYAN_BOLD}Sam deploy"
    - sam deploy
    - echo -e "\e[0Ksection_end:`date +%s`:sam-deploy\r\e[0K"

.synthesis:
  script:
    - echo -e "\e[0Ksection_start:`date +%s`:synthesis-audios[collapsed=false]\r\e[0K${TXT_CYAN_BOLD}Synthesising audios"
    - files=$(git diff-tree --no-commit-id --name-only -r ${CI_COMMIT_SHA})
    - >
      while IFS= read -r line; do
        IFS='/' read -r -a array <<< "$line"
        echo "$line"
        if [[ ${array[0]} == ${CERTIFICATIONS_PATHS} ]]; then
          python3 parse/read-file.py $line
        fi
      done <<< "$files"
    - echo -e "\e[0Ksection_end:`date +%s`:synthesis-audios\r\e[0K"

.rules:
  docker:
    - changes:
        - $DOCKERFILES_DIR/*
  deploy:
    - changes:
        - $DEPLOY_PATH/**/*
        - $DEPLOY_PATH/*
  synthesis:
    - changes:
        - $CERTIFICATIONS_PATHS/**/*
        - $CERTIFICATIONS_PATHS/*

build:
  image: docker:19.03.12
  services:
    - docker:19.03.12-dind
  stage: build-image
  rules:
    - !reference [.rules, docker]
  script:
    - !reference [.docker, build-and-push]
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:latest

deploy:
  stage: deploy-sam
  rules:
    - !reference [.rules, deploy]
  script:
    - cd $SAM_PATH
    - !reference [.sam, build]
    - !reference [.sam, deploy]
  variables:
    SAM_PATH: $DEPLOY_PATH/certifications-audios

.call-api:
  stage: call-api
  script:
    - echo -e "\e[0Ksection_start:`date +%s`:callapi[collapsed=true]\r\e[0K${TXT_CYAN_BOLD}Call Audio API"
    - AUDIO_API=$(aws cloudformation describe-stacks --stack-name $STACK_NAME --query "Stacks[0].Outputs[?OutputKey=='HelloWorldApi'].OutputValue" --output text)
    - curl --data "$CI_COMMIT_SHA" $AUDIO_API
    - echo -e "\e[0Ksection_end:`date +%s`:callapi\r\e[0K"

synthesis-file:
  stage: synthesis-file
  image: $CI_REGISTRY_IMAGE:latest
  rules:
    - !reference [.rules, synthesis]
  script:
    - !reference [.synthesis, script]
  artifacts:
    paths:
      - ./*.mp3
